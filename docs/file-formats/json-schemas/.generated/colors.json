{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "title": "Lona Colors",
  "description": "This file defines the design system's colors.",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "type": "string",
      "format": "url"
    },
    "$version": {
      "const": 2,
      "description": "A number specifying the version of the specs of the colors."
    },
    "themes": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique `id` of the theme, which will be used internally by Lona Studio and in the generated code. This should be _code-friendly_: it must not contain spaces or unusual characters, since it will be used as a variable name."
          },
          "name": {
            "type": "string",
            "description": "The human-readable name of the theme. This will be displayed in the Lona Studio UI. This will not appear in the generated code."
          },
          "comment": {
            "type": "string",
            "description": "An optional description of the theme, explaining contextual information, such as how it should be used. This may be displayed in the Lona Studio UI. This will not appear in the generated code."
          },
          "metadata": {
            "type": "object",
            "description": "Additional data used by the generated code to match platform specific features (for example `metadata.isMacOSDarkTheme` indicates that the theme should be used when the macOS system theme is `dark`)."
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ]
      },
      "description": "The default theme is the first item of the array, if any."
    },
    "color-profiles": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique `id` of the profile, which will be used internally by Lona Studio and in the generated code. This should be _code-friendly_: it must not contain spaces or unusual characters, since it will be used as a variable name."
          },
          "name": {
            "type": "string",
            "description": "The human-readable name of the profile. This will be displayed in the Lona Studio UI. This will not appear in the generated code."
          },
          "value": {
            "type": "string",
            "format": "url",
            "description": "The URL to the color profile."
          },
          "comment": {
            "type": "string",
            "description": "An optional description of the profile, explaining contextual information, such as how it should be used. This may be displayed in the Lona Studio UI. This will not appear in the generated code."
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "value"
        ]
      },
      "description": "",
      "examples": [
        "{\n  \"color-profiles\": [\n    {\n      \"id\": \"indigo\",\n      \"name\": \"Indigo\",\n      \"value\": \"https://example.org/indigo-seven.icc\"\n    }\n  ]\n}\n"
      ]
    },
    "colors": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/color"
      },
      "description": ""
    }
  },
  "required": [
    "$version",
    "colors"
  ],
  "definitions": {
    "color": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique `id` of the color, which will be used internally by Lona Studio and in the generated code. This should be _code-friendly_: it must not contain spaces or unusual characters, since it will be used as a variable name."
        },
        "name": {
          "type": "string",
          "description": "The human-readable name of the color. This will be displayed in the Lona Studio UI. This will not appear in the generated code."
        },
        "case": {
          "enum": [
            "color",
            "themed",
            "group",
            "ref"
          ],
          "description": "The type of the color. Defines how the value should look like."
        },
        "value": {
          "type": [
            "object",
            "array",
            "string"
          ],
          "description": "An object representing the color."
        },
        "comment": {
          "type": "string",
          "description": "An optional description of the color, explaining contextual information, such as how it should be used. This may be displayed in the Lona Studio UI. This will not appear in the generated code."
        }
      },
      "additionalProperties": false,
      "required": [
        "id",
        "name",
        "value",
        "case"
      ],
      "if": {
        "properties": {
          "case": {
            "const": "color"
          }
        }
      },
      "then": {
        "properties": {
          "value": {
            "type": "string",
            "description": "A raw CSS 4 string representing the color, eg. `\"#0000EE\"` or `\"rgba(255, 0, 0, 1)\"` or `\"color(indigo 0.0941 0.6274 0.3372 0.1647 0 0.0706 0.1216)\"` if a color profile with the id `indigo` is defined.\n\nSee the [CSS specification](https://www.w3.org/TR/css-color-4/) for more information about the format of the string.\n"
          }
        }
      },
      "else": {
        "if": {
          "properties": {
            "case": {
              "const": "themed"
            }
          }
        },
        "then": {
          "properties": {
            "value": {
              "type": "object",
              "description": "The value of a color can also depend on the theme. To specify the value of the color for a specific theme, use the `id` of the theme as the property name. The property value is a raw CSS 4 string.\n\nThe value needs to specify its representation for all themes.\n",
              "examples": [
                "{\n  \"theme\": [\n    { \"id\": \"light\", \"name\": \"Light Theme\" },\n    { \"id\": \"dark\", \"name\": \"Dark Theme\" }\n  ],\n  \"colors\": [\n    {\n      \"id\": \"textColor\",\n      \"name\": \"Text Color\",\n      \"case\": \"themed\",\n      \"value\": {\n        \"light\": \"#000000\",\n        \"dark\": \"#ffffff\"\n      }\n    }\n  ]\n}\n"
              ]
            }
          }
        },
        "else": {
          "if": {
            "properties": {
              "case": {
                "const": "group"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/color"
                },
                "description": "An array of `Color`."
              }
            }
          },
          "else": {
            "if": {
              "properties": {
                "case": {
                  "const": "ref"
                }
              }
            },
            "then": {
              "properties": {
                "value": {
                  "type": [
                    "object",
                    "array",
                    "string"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "minItems": 2,
                  "properties": {
                    "type": {
                      "const": "call"
                    },
                    "id": {
                      "enum": [
                        "red",
                        "green",
                        "blue",
                        "rgb",
                        "alpha",
                        "hue",
                        "saturation",
                        "lightness",
                        "blackness",
                        "whiteness",
                        "tint",
                        "shade",
                        "blend",
                        "blenda",
                        "contrast"
                      ]
                    },
                    "arguments": {
                      "type": "array",
                      "minItems": 1
                    }
                  },
                  "description": "It is possible for a value to reference another color's value by their `id` (a `string`) and extend it:\n\n```json\n// An identifier, for aliasing\n\"case\": \"ref\",\n\"value\": \"baseColor\"\n```\n\nWhen referencing a grouped color, the value needs to be the array of identifiers leading to the referenced color:\n\n```json\n// A member expression, for aliasing\n\"case\": \"ref\",\n\"value\": [\"blues\", \"100\"]\n```\n\nIt is also possible to reference an expression representing a function call to extend an existing color.\n\nFor example, saturating a color:\n\n```json\n// A function call expression\n\"case\": \"ref\",\n\"value\": {\n  \"type\": \"call\",\n  \"id\": \"saturate\",\n  \"arguments\": [\"baseColor\", \"+\", 0.2]\n}\n```\n\nThe functions are pre-defined. See https://www.w3.org/TR/2016/WD-css-color-4-20160705/#rgba-adjusters for more information about the functions available.\n\nThe first argument of each function is always a color reference, eg. either a reference to a color id or an expression of another function call.\n"
                }
              }
            }
          }
        }
      }
    }
  },
  "examples": [
    "{\n  \"colors\": [\n    {\n      \"id\": \"lonaTeal\",\n      \"name\": \"Lona Teal\",\n      \"case\": \"color\",\n      \"value\": \"#008080\",\n      \"comment\": \"Teal color for backgrounds\"\n    },\n    {\n      \"id\": \"lonaBlue\",\n      \"name\": \"Lona Blue\",\n      \"case\": \"color\",\n      \"value\": \"#000080\",\n      \"comment\": \"Blue accent color\"\n    }\n  ]\n}\n"
  ]
}
